snippet favico "Favicon for WordPress"
<link rel="shortcut icon" href="<?php echo get_template_directory_uri(); ?>/favicon.ico" />
endsnippet

snippet wp "WordPress theme template" b
<?php wp_template(__FILE__, ${1:true});

////////////////////////////////////////////////////////////
// $2.php - $3

$0
?>
endsnippet

snippet wp-header "WordPress Header Template"
<?php wp_template(__FILE__, true);

////////////////////////////////////////////////////////////
// header.php - displays header

?><!DOCTYPE html>
<html lang="en-US">
<head>
    <meta charset="<?php bloginfo( 'charset' ); ?>">
    <meta name="viewport" content="width=device-width, initial-scale=1, maximum-scale=1, user-scalable=no" />
    <title><?php wp_title( ' | ', true, 'right' ); ?>Southeast Pallet Recycling</title>
    <link rel="shortcut icon" href="<?php echo get_template_directory_uri(); ?>/favicon.ico" />
    <?php wp_head(); ?>
</head>
<body <?php body_class(); ?>>
endsnippet

snippet wp-thumb "Declare WordPress thumbnail support"
// Declare Thumbnail support
add_theme_support( 'post-thumbnails' );
$0
endsnippet

snippet wp-opt "WordPress Optimizations"
// Wordpress Optimizations
remove_action( 'wp_head', 'print_emoji_detection_script', 7 );
remove_action( 'wp_print_styles', 'print_emoji_styles' );
remove_action( 'wp_head', 'wp_generator' );
remove_action( 'wp_head', 'wlwmanifest_link' );
remove_action( 'wp_head', 'rsd_link' );
$0
endsnippet

snippet wp-debug "WordPress theme debugging function"
// wp_template()
//      default setup for wordpress php template files
function wp_template($file, $debug_in_header = false) {
    // When file is called directly, immediately redirect to a 404 page
    if ( ! defined( 'ABSPATH' ) ) {
        header('Location: /error-404-page-not-found');
        die();
    }

    // Debugging
    if ( WP_DEBUG ) {
        $filestamp = function() use ($file) {
                echo "    <!-- [" . date('H:i:s', time()) .  '] ' . 'Called file: "' . $file . '" -->' . "\n";
            };
        if ( $debug_in_header ) {
            // Print the template filename in the header
            add_action('wp_head', $filestamp);
        } else { // or just echo it out where ever it is called
            $filestamp();
        }
    }
}
$0
endsnippet

snippet wp-hide-bar "Hide WordPress bar"
// Hide the front-end admin bar when logged in
add_filter( 'show_admin_bar', function() {
    remove_action( 'wp_head', '_admin_bar_bump_cb' );
    return false;
});
$0
endsnippet

snippet wp-hide-tinymce "Hide WordPress "
// Hide wysiwyg editor for home page
add_action( 'edit_form_after_editor', function($post) {
    if( $post->ID == get_option('page_on_front') ) {
        echo '<style>#postdivrich { display: none; }</style>';
    }
});
$0
endsnippet

snippet wp-tinymce "Customize WordPress TinyMCE"
// Customize tinymce
add_filter('tiny_mce_before_init', function($init) {
    $init['block_formats'] = 'Paragraph =p;Header 2=h2;Header 3=h3;Header 4=h4';
    $init['toolbar2'] = 'formatselect,underline,alignjustify,forecolor,pastetext,removeformat,charmap,undo,redo,wp_help';
    $default_colours = '
        "39b54a", "Green",
        "000000", "Black",
        "1c1c1c", "Very dark grey",
        "242424", "Dark Grey",
        "8d8d8d", "Grey",
        "d4d4d4", "Light Grey",
        "e1e1e1", "Off White",
        "ffffff", "White",
        ';
    $init['textcolor_map'] = '['.$default_colours.']';
    return $init;
});
$0
endsnippet

snippet wp-settings "Add WordPress Site Settings"
// Setup Site Settings Menu
add_action('admin_menu', function() {
    add_options_page(
        '$1',  // Page Title
        '${2:Site Settings}', // Menu Title
        '${3:administrator}', // Permissions
        '${4:site_settings_page}',  // Menu Slug
        function() { // Function used to display these settings ?>
            <h2>$5</h2>
            <form method="post" action="options.php">
                <?php settings_fields( '$6' ); ?>
                <?php do_settings_sections( '$4' ); ?>
                <?php submit_button(); ?>
            </form><?php
        }
    );
});

// Register Custom Southeast Pallet settings
add_action('admin_init', function() {

    add_settings_section(
        '${7:general_section}',
        '${8:General Settings}', // Section Title
        null,
		'$4'
    );

	add_settings_field(
		'$9', // Setting name
		'$10', // Setting Label
		'${11:display_settings_field}', // function to display
		'$4',
        '$7',
		array(
			'description' => '$12',
			'input_type'  => '${13:text}',
			'input_name'  => '$9',
			'input_size'  => '${14:50}'
		)
	);

   $0

    register_setting( '$6', '$9' );
});

function sep_display_settings_field($args) {
    $value = get_option($args['input_name']);
    $type = $args['input_type'];
    $size = $args['input_size'];
    $description = $args['description'];
    $id = $name = $args['input_name'];?>

	<input type="<?= $type ?>" name="<?= $name ?>" id="<?= $id ?>" value="<?= $value ?>" size="<?= $size ?>" />
    <p class="description"><?= $description ?></p><?php
}
endsnippet

snippet wp-asetting "An individual WordPress setting"
add_settings_field(
	'$1', // Setting name
	'$2', // Setting Label
	'${3:display_settings_field}', // function to display
	'$4',
	'$5',
	array(
		'description' => '$6',
		'input_type'  => '${7:text}',
		'input_name'  => '$1',
		'input_size'  => '${8:50}'
	)
);
$0
register_setting( '$9', 'i$1' );
endsnippet

snippet wp-post "A Custom WordPress Post Type"
// Add custom post type $1
add_action( 'init', function() {
    register_post_type( '$2', array (
            'labels' => array (
                    'name' => '${3:$1}',
                    'singular_name' => '${4:$1}',
                ),
            'description' => '$5',
            'public' => ${6:false},
            'show_ui' => ${7:true},
            'publicly_queryable' => ${8:false},
            'exclude_from_search' => ${9:true},
            'menu_position' => ${10:21},
            'show_in_nav_menus' => ${11:false},
            'menu_icon' => '${12:dashicons-images-alt2}',
            'rewrite' => ${13:false},
            'has_archive' => ${14:false},
            'supports' => array(${15:'title', 'thumbnail'}),
        ) );
});
${16:
// $2()
//    ${17:returns the string for }
function $2() {
    $$2 = '<div>';

    query_posts('post_type=$2');

    if ( have_posts()) : while ( have_posts() ) : the_post();
        global $post;
        ${18:$2 .= get_the_post_thumbnail( $post->ID, 'large' );}
    endwhile; endif; wp_reset_query();

	$19
    $$2 .= '</div>';

    return $$2;
}
add_shortcode('$2', 'insert_$2');
function insert_$2() { return $2(); }
function the_$2() { echo $2(); }
}
$0
endsnippet

snippet wp-function "Creates a WordPress function for templates"
// get_$1()
//    returns the string for the ${2:$1}
function get_$1() {
    ${3:$${4:$1} = ${5:get_option('${6:$1}');}}
	$7
    return $$4;
}
function the_$1() { echo get_$1(); }
$0
endsnippet

snippet wp-login "Sets up WordPress Login filters"
add_action('login_enqueue_scripts', function() {
	wp_register_style('${1:style}', get_template_directory_uri().'${2:/css/style.css.php}');
	wp_register_style('${3:roboto-font}', '${4:https://fonts.googleapis.com/css?family=Roboto:300,300italic,700,700italic'});
	wp_enqueue_style('$1');
	wp_enqueue_style('$3');
});

add_filter('login_headerurl', function() { return ${5:home_url()}; });

add_filter('login_headertitle', function() { return ${6:get_bloginfo('description')}; });
$0
add_filter('login_redirect', function( $redirect_to, $request, $user ) {
    if ( isset( $user->roles ) && is_array( $user->roles ) ) {
        if( in_array('administrator', $user->roles)) { return admin_url(); }
    }
    return $redirect_to;
}, 10, 3);
endsnippet

snippet wp-menu "Creates a WordPress Menu"
add_action('init', function() {
    register_nav_menu('${1:slug}', __('${2:Human Name}'));
});

function ${3:get_the_nav_menu}( $depth = 1 ) {
    if ( has_nav_menu( '$1' ) ) {
        return wp_nav_menu( array(
            'container'       => false,
            'depth'           => $depth,
            'theme_location'  => '$1',
            'items_wrap'      => '%3$s',
            'walker'          => new ${4:NavWalker}(),
            'echo'            => ${5:false},
        ) );
    }
}
function ${6:the_nav_menu}( $depth = 1 ) { echo $3( $depth ); }


// Custom Walker Navigation class
class $4 extends Walker_Nav_Menu {

    function start_lvl( &$output, $depth = 0, $args = array() ) {
        $indent = str_repeat("\t", $depth + 2);

        if( $depth == 0 ) {
            $class_name = 'submenu';
        } else {
            $class_name = 'hide';
        }

        $output .= "\n$indent<nav class=\"$class_name\">";
    }

    function end_lvl( &$output, $depth = 0, $args = array() ) {
        $indent = str_repeat("\t", $depth + 2);
        $output .= "\n$indent</nav></div>\n";
    }

    function start_el(&$output, $item, $depth = 0, $args = array(), $id = 0) {
        $indent = str_repeat("\t", $depth + 2);

        $classes = empty( $item->classes ) ? array() : (array) $item->classes;
        $classes[] = 'menu-item-' . $item->ID;

        $class_names = join( ' ', apply_filters( 'nav_menu_css_class', array_filter( $classes ), $item, $args, $depth ) );
        $class_names = $class_names ? esc_attr( $class_names ) : '';

        $atts = array();
        $atts['title']  = ! empty( $item->attr_title ) ? $item->attr_title : '';
        $atts['target'] = ! empty( $item->target )     ? $item->target     : '';
        $atts['rel']    = ! empty( $item->xfn )        ? $item->xfn        : '';
        $atts['href']   = ! empty( $item->url )        ? $item->url        : '';
        $atts['class']  = $class_names;

        $atts = apply_filters( 'nav_menu_link_attributes', $atts, $item, $args, $depth );

        $attributes = '';
        foreach ( $atts as $attr => $value ) {
            if ( ! empty( $value ) ) {
                $value = ( 'href' === $attr ) ? esc_url( $value ) : esc_attr( $value );
                $attributes .= ' ' . $attr . '="' . $value . '"';
            }
        }

        $item_output = '';

        if ($args->walker->has_children && $args->depth > 1) {
            $item_output .= "\n$indent<div class=\"supermenu\">\n";
        }
        $item_output .= "\n$indent<a$attributes>" . apply_filters( 'the_title', $item->title, $item->ID ) . '</a>';

        $output .= apply_filters( 'walker_nav_menu_start_el', $item_output, $item, $depth, $args );
    }

    // Not Used
    function end_el( &$output, $item, $depth = 0, $args = array() ) { }
}
endsnippet

snippet wp_woocommerce "Adds Woocommerce Support"
// Declare woocommerce support in this theme
add_action('after_setup_theme', function(){ add_theme_support('woocommerce'); });
$0
endsnippet

snippet wp_woo_image "Woocommerce placeholder image."
// Set the placeholder image
add_filter('woocommerce_placeholder_img_src', function($src) {
    return get_template_directory_uri() . '/images/lg-container.png';
});
$0
endsnippet

snippet wp_woo_optimize "Optimize Woocommerce Sites"
////////////////////////////////////////////////////////////
//// Optimize Woocommerce Scripts

add_action( 'wp_enqueue_scripts', 'sol_woocommerce_scripts', 95 );
function sol_woocommerce_scripts() {
	//first check that woo exists to prevent fatal errors
	if ( function_exists( 'is_woocommerce' ) ) {
		//dequeue scripts and styles
		if ( ! is_woocommerce() && ! is_cart() && ! is_checkout() ) {
            wp_dequeue_style( 'woocommerce-general' );
            wp_dequeue_style( 'woocommerce-layout' );
            wp_dequeue_style( 'woocommerce-smallscreen' );
			wp_dequeue_style( 'woocommerce_frontend_styles' );
			wp_dequeue_style( 'woocommerce_fancybox_styles' );
			wp_dequeue_style( 'woocommerce_chosen_styles' );
			wp_dequeue_style( 'woocommerce_prettyPhoto_css' );
			wp_dequeue_script( 'wc_price_slider' );
			wp_dequeue_script( 'wc-single-product' );
			wp_dequeue_script( 'wc-add-to-cart' );
			wp_dequeue_script( 'wc-cart-fragments' );
			wp_dequeue_script( 'wc-checkout' );
			wp_dequeue_script( 'wc-add-to-cart-variation' );
			wp_dequeue_script( 'wc-single-product' );
			wp_dequeue_script( 'wc-cart' );
			wp_dequeue_script( 'wc-chosen' );
			wp_dequeue_script( 'woocommerce' );
			wp_dequeue_script( 'prettyPhoto' );
			wp_dequeue_script( 'prettyPhoto-init' );
			wp_dequeue_script( 'jquery-blockui' );
			wp_dequeue_script( 'jquery-placeholder' );
			wp_dequeue_script( 'fancybox' );
			wp_dequeue_script( 'jqueryui' );
		}
	}
}
$0
endsnippet


