#!/bin/bash
#
# name:             sass-watch
# author:           Harold Bradley III
# email:            harold@bradleystudio.net
# created:          Fri 15 July 2013 11:53:35 AM EST
#
# description:      Watches sass files for modifications and compiles them
#
#                   This script assumes the sass files are in a directory named
#                   sass either in the current directory, in the parent
#                   directory, or in the parent's parent directory.
#
#                   Settings can be modified by creating a bash file named
#                   sass.config that is in the sass directory.
#
#                   Settings:
#                       $sass_file - the main sass file to compile
#                       $style_sheet - the location of the stylesheet to compile
#                       $flags - any flags to pass to sassc
#

# compile() {{{1
#   compile sass
function compile() {
    local event_name=$1
    local filename=$2
    local sass_cmd=$3

    printf "    \e[1;33m$event_name \e[m$filename%-30s"
    TIMEFORMAT="(%Rs)"
    time (
        local error_msg="$($sass_cmd 2>&1 > /dev/null)"
        if [[  $error_msg == "" ]] ; then
            printf "\e[0;32m[compiled]\e[m "
        else
            printf "\n\e[0;31m $error_msg\e[m "
        fi
    )
}
# }}}


# main() {{{1
#   main function
function main() {
    local sass_dir="$(pwd)/sass"
    if [[ ! -d "$sass_dir" ]] ; then
        local sass_dir=$(readlink -f "../sass")  # Using readlink to resolve relative path
        if [[ ! -d "$sass_dir" ]] ; then
            local sass_dir=$(readlink -f "../../sass")  # Using readlink to resolve relative path
        fi
    fi
    local sass_file="$sass_dir/style.scss"
    local style_sheet=$(readlink -f "$sass_dir/../css/style.css")  # Using readlink to resolve relative path
    local flags="-m"

    # Source sass.config if it exists
    if [[ -f "$sass_dir/sass.config" ]] ; then
        source "$sass_dir/sass.config"
    fi

    if [[ ! -d "$sass_dir" ]] ; then
        read -rsp "SASS directory not found. Press any key to continue...\n" -n1 key
    fi

    local sass_cmd="sassc $sass_file $style_sheet $flags"

    printf "        \e[0;32mRunning sass-watch \e[m \e[0;34m[sassc $flags]\e[m\n"
    # First compile:
    compile "Starting:" "          " "$sass_cmd"
    printf "            Watching for changes...\n"

    local last_mod_time=0

    # Set up watches:
    inotifywait -qmr -e create,delete,modify,move --format "%f %e %T" --timefmt "%s" "./sass/" |
    while read filename event mod_time; do
        if [[ "${filename##*.}" == "scss" ]] ; then

            # Make sure at least 1 second has changed since last mod
            if [[ $last_mod_time -ge $(($mod_time - 1)) ]] ; then continue ; fi

            # Otherwise, save this modtime and continue compiling:
            last_mod_time=$mod_time

            # Set screen friendly event name
            case $event in
                'CREATE')
                    local event_name="Created:  "
                    ;;
                'DELETE')
                    local event_name="Deleted:  "
                    ;;
                'MOVE')
                    local event_name="Moved:    "
                    ;;
                'MODIFY')
                    local event_name="Modified: "
                    ;;
                *)
                    local event_name="Modified: "
                    ;;
            esac

            # Compile the sass
            compile "$event_name" "$filename" "$sass_cmd"
        fi
    done
}
# }}}


    # Run sass-watch main function if called directly
if [[ $0 = */sass-watch ]] ; then
    main
fi

# vim:set ft=sh fdm=marker:
