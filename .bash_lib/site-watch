#!/bin/bash
#
# name:             site-watch
# author:           Harold Bradley III
# email:            harold@bradleystudio.net
# created:          Fri 15 July 2013 11:53:35 AM EST
#
# description:      Watches website files for modifications and updates a file
#                   called '.site-watch' in the root directory (the root that
#                   is being watched, which does not have to be the root of the
#                   website). The file's first line is the timestamp of the
#                   modification, and the second line is the file modified. The
#                   file '.site-watch' is removed when the script is closed.
#
#                   Settings can be modified by creating a bash file named
#                   site-watch.config that is in the root directory.
#
#                   Settings:
#                       $WATCH_DIR - the directory to watch
#                       $WATCH_FILE - the file to update with changes
#                       $FILE_TYPES - the file extensions to watch
#
#                   If a site-watch.config file cannot be found in a parent
#                   directory (recursively), the $WATCH_DIR is assumed to be
#                   the current directory.
#

# Catch and cleanup on Ctrl-C and Terminate
trap clean_up INT
trap clean_up TERM

# clean_up() {{{1
#   Removes .site-watch file
function clean_up() {
    printf "\n\e[0;34m>>  Cleaning up...\e[m\n"
    printf "    Removing '%s'..." "$(basename $WATCH_FILE)"
    rm "$WATCH_FILE" && printf "\e[0;32m[Finished]\e[m\n"
}
# }}}


# main() {{{1
#   main function
function main() {
    WATCH_DIR="$(pwd)"
    WATCH_FILE="$WATCH_DIR/.site-watch"
    FILE_TYPES=("php" "js" "css" "html" "htm")

    # Search parents recursively for a 'site-watch.config' file.
    local parent_dir="$(dirname "$WATCH_DIR")"
    while [[ "$parent_dir" -ne "/" ]] ; do
        # If 'site-watch.config' exists, set WATCH_DIR to this dir,
        # then soure the config
        if [[ -f "$parent_dir/site-watch.config" ]] ; then
            WATCH_DIR="$parent_dir"
            source "$parent_dir/site-watch.config"
            break #
        fi
        parent_dir="$(dirname "$parent_dir")"
    done

    if [[ ! -d "$WATCH_DIR" ]] ; then
        read -rsp "Watch directory not found. Press any key to continue...\n" -n1 key
    fi

    # Make sure watch file exists
    echo -e "$(date +%s%3N)\n[starting]" > $WATCH_FILE

    printf "        \e[0;32mRunning site-watch \e[m \n    \e[0;34m%s\e[m\n" "$WATCH_DIR"
    printf "\n\e[0;34m>>  Watching for changes...\e[m\n"

    local last_mod_time=0
    local last_file=""

    # Set up watches:
    inotifywait -qmr -e create,delete,modify,move --format "%f %e %T" --timefmt "%s" $WATCH_DIR |
    while read filename event mod_time; do
        if [[ " ${FILE_TYPES[@]} " =~ "${filename##*.}" ]] ; then

            # Make sure at least 1 second has changed since last mod of this file
            if [[ $last_mod_time -ge $(($mod_time - 1)) ]] && [[ $last_file == $filename ]] ; then continue ; fi

            # Otherwise, save this modtime/filename and continue compiling:
            last_mod_time=$mod_time
            last_file=$filename

            # Set screen friendly event name
            case $event in
                'CREATE')
                    local event_name="Created:  "
                    ;;
                'DELETE')
                    local event_name="Deleted:  "
                    ;;
                'MOVE')
                    local event_name="Moved:    "
                    ;;
                'MODIFY')
                    local event_name="Modified: "
                    ;;
                *)
                    local event_name="Modified: "
                    ;;
            esac

            printf "\e[1;33m%-11s \e[m%-30s" "    $event_name " "$filename"
            echo -e "$(date +%s%3N)\n$filename" > $WATCH_FILE
            printf "\e[0;32m[watch updated]\e[m\n"
        fi
    done
}
# }}}


    # Run site-watch main function if called directly
if [[ $0 = */site-watch ]] ; then
    main
fi

# vim:set ft=sh fdm=marker:
