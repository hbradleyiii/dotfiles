#!/bin/bash
#
# name:             install
# author:           Harold Bradley III
# email:            harold@bradleystudio.net
# created:          12/21/2015
#
# description:      Creates a symlink in the home directory for each
#                   appropriate dotfile in this repo.
#

DOTFILES_ROOT_DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"

source $DOTFILES_ROOT_DIR/.bash_lib/msg || { echo "'msg' does not exist!" >&2 ; exit 1; }

### creat_link()
# create_link() {{{1
function create_link() {
    echo "Linking $filename..."
    if [[ -d $DOTFILES_ROOT_DIR/$1 ]] ; then
        ln -s $DOTFILES_ROOT_DIR/$filename/ ~/$filename
    else
        ln -s $DOTFILES_ROOT_DIR/$filename ~/$filename
    fi
} # }}}

# Setup links
for file in $DOTFILES_ROOT_DIR/.[^.]* ; do
    filename=${file##*/}
    if [[ $filename != '.git' ]] ; then
        if [[ -f ~/$filename || -d ~/$filename ]] ; then
            link=$(readlink ~/$filename)
            if [[ -L ~/$filename && ${link%/} == $DOTFILES_ROOT_DIR/$filename ]] ; then
                echo "Skipping $filename. Already linked."
                continue
            elif msg_ask "$filename already exists but does not link to dotfiles. Remove it?"; then
                rm -r ~/$filename
            fi
        fi
        create_link $filename
    fi
done

# Verify (correct) Permissions
printf "Checking Permissions... "
if [[ "$(find $DOTFILES_ROOT_DIR/ -not -user $USER | wc -l)" -ne "0" ]] ; then
    printf "\n"
    sudo chown -R $USER $DOTFILES_ROOT_DIR/
fi
printf "[OK]\n"

# Setup git hooks
if [[ -d $DOTFILES_ROOT_DIR/.git/hooks ]] ; then
    if [[ -L $DOTFILES_ROOT_DIR/.git/hooks ]] ; then
        if [[ $(readlink $DOTFILES_ROOT_DIR/.git/hooks) == $DOTFILES_ROOT_DIR/hooks ]] ; then
            echo "Hooks already linked."
        elif msg_ask "A hooks link already exists but does not link to dotfiles hooks. Remove it?"; then
            rm $DOTFILES_ROOT_DIR/.git/hooks
            echo "Linking git hooks..."
            ln -s $DOTFILES_ROOT_DIR/hooks $DOTFILES_ROOT_DIR/.git/hooks
        fi
    elif msg_ask "A hooks directory already exists but does not link to dotfiles hooks. Remove it and use dotfiles hook?"; then
        rm -r $DOTFILES_ROOT_DIR/.git/hooks
        echo "Linking git hooks..."
        ln -s $DOTFILES_ROOT_DIR/hooks $DOTFILES_ROOT_DIR/.git/hooks
    fi
else
    echo "Linking git hooks..."
    ln -s $DOTFILES_ROOT_DIR/hooks $DOTFILES_ROOT_DIR/.git/hooks
fi

# Run ctags
type -P "ctags-exuberant" &>/dev/null
if [[ $? -eq 0 ]] ; then
    ctags-exuberant -Rf./tags --exclude=.git/* --exclude=.vim/* --exclude=.config/* --exclude=.bash_lib/wp --exclude=.bash_lib/composer .[^.]?*
    ctags-exuberant -af./tags --language-force=sh .bashrc .bash_profile
    ctags-exuberant -aRf./tags .config/ranger/*
else
    echo 'ctags-exuberant is not installed. Skipping ctags.'
fi


source ~/.bash_profile

# Copy Mac Config files on Macs
if [[ $MAC_OS ]] ; then
    cp -r ~/.dotfiles/Library/ ~/
fi

# vim:set ft=sh fdm=marker:
