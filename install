#!/bin/bash
#
# name:             install
# author:           Harold Bradley III
# email:            harold@bradleystudio.net
# created:          12/21/2015
#
# description:      Creates a symlink in the home directory for each
#                   appropriate dotfile in this repo.
#

source ~/.dotfiles/.bash_lib/msg || { echo "'msg' does not exist!" >&2 ; exit 1; }

# Setup links
for file in ~/.dotfiles/.[^.]* ; do
    filename=${file##*/}
    if [[ $filename != '.git' ]] ; then
        if [[ -f ~/$filename || -d ~/$filename ]] ; then
            if [[ -L ~/$filename && $(readlink -f ~/$filename) == ~/.dotfiles/$filename ]] ; then
                echo Skipping $filename. Already linked.
            elif msg_ask "$filname already exists but does not link to dotfiles. Remove it?"; then
                rm ~/$filename
                echo Linking $filename...
                ln -s ~/.dotfiles/$filename ~/$filname
            fi
        else
            echo Linking $filename...
            ln -s ~/.dotfiles/$filename ~/$filname
        fi
    fi
done

# Setup vim
if msg_ask "Setup vim and install vim plugins?"; then
    vim
fi

# Setup git hooks
if [[ -d ~/.dotfiles/.git/hooks ]] ; then
    if [[ -L ~/.dotfiles/.git/hooks ]] ; then
        if [[ $(readlink -f ~/.dotfiles/.git/hooks) == ~/.dotfiles/hooks ]] ; then
            echo Hooks already linked.
        elif msg_ask "A hooks link already exists but does not link to dotfiles hooks. Remove it?"; then
            rm ~/.dotfiles/.git/hooks
            echo Linking git hooks...
            ln -s ~/.dotfiles/hooks ~/.dotfiles/.git/hooks
        fi
    elif msg_ask "A hooks directory already exists but does not link to dotfiles hooks. Remove it and use dotfiles hook?"; then
        rm -r ~/.dotfiles/.git/hooks
        echo Linking git hooks...
        ln -s ~/.dotfiles/hooks ~/.dotfiles/.git/hooks
    fi
else
    echo Linking git hooks...
    ln -s ~/.dotfiles/hooks ~/.dotfiles/.git/hooks
fi

# vim:set ft=sh fdm=marker:
